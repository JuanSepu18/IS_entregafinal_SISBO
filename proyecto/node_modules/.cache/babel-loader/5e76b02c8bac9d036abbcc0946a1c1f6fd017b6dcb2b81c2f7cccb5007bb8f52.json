{"ast":null,"code":"import config from '../config';\nclass APIInvoke {\n  async invokeGET(resource, queryParams) {\n    queryParams = queryParams || [];\n    const queryString = queryParams.reduce((last, q, i) => last + `${i === 0 ? '?' : \"&\"}${q}`, '');\n    const token = localStorage.getItem(\"token\");\n    const data = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': \"\"\n      }\n    };\n    const url = `${config.api.baseURL}${resource}${queryString}`;\n    let response = await (await fetch(url, data)).json();\n    return response;\n  }\n  async invokePUT(resource, body) {\n    const token = localStorage.getItem(\"token\");\n    const data = {\n      method: 'PUT',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': \"\"\n      }\n    };\n    const url = `${config.api.baseURL}${resource}`;\n    let response = await (await fetch(url, data)).json();\n    return response;\n  }\n  async invokePOST(resource, body) {\n    const token = localStorage.getItem(\"token\");\n    const data = {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const url = `${config.api.baseURL}${resource}`;\n    let response = await (await fetch(url, data)).json();\n    return response;\n  }\n  async invokeDELETE(resource) {\n    const token = localStorage.getItem(\"token\");\n    const data = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': \"\"\n      }\n    };\n    const url = `${config.api.baseURL}${resource}`;\n    let response = await (await fetch(url, data)).json();\n    return response;\n  }\n}\nexport default new APIInvoke();","map":{"version":3,"names":["config","APIInvoke","invokeGET","resource","queryParams","queryString","reduce","last","q","i","token","localStorage","getItem","data","method","headers","url","api","baseURL","response","fetch","json","invokePUT","body","JSON","stringify","invokePOST","invokeDELETE"],"sources":["C:/Users/Carlos/Desktop/IS_entregafinal_SISBO/proyecto/src/utils/APIInvoke.js"],"sourcesContent":["import config from '../config'\r\n\r\nclass APIInvoke {\r\n    async invokeGET(resource, queryParams) {\r\n\r\n        queryParams = queryParams || []\r\n        const queryString = queryParams.reduce((last, q, i) => last + `${i === 0 ? '?' : \"&\"}${q}`, '')\r\n\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        const data = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-auth-token': \"\"\r\n            }\r\n        }\r\n        const url = `${config.api.baseURL}${resource}${queryString}`\r\n        let response = (await (await fetch(url, data)).json())\r\n        return response\r\n    }\r\n\r\n    async invokePUT(resource, body) {\r\n\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        const data = {\r\n            method: 'PUT',\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-auth-token': \"\"\r\n            }\r\n        }\r\n        const url = `${config.api.baseURL}${resource}`\r\n        let response = (await (await fetch(url, data)).json())\r\n        return response\r\n    }\r\n\r\n    async invokePOST(resource, body) {\r\n\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        const data = {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }\r\n        const url = `${config.api.baseURL}${resource}`\r\n        let response = (await (await fetch(url, data)).json())\r\n        return response\r\n    }\r\n\r\n    async invokeDELETE(resource) {\r\n\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        const data = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-auth-token': \"\"\r\n            }\r\n        }\r\n        const url = `${config.api.baseURL}${resource}`\r\n        let response = (await (await fetch(url, data)).json())\r\n        return response\r\n    }\r\n}\r\n\r\nexport default new APIInvoke()"],"mappings":"AAAA,OAAOA,MAAM,MAAM,WAAW;AAE9B,MAAMC,SAAS,CAAC;EACZ,MAAMC,SAASA,CAACC,QAAQ,EAAEC,WAAW,EAAE;IAEnCA,WAAW,GAAGA,WAAW,IAAI,EAAE;IAC/B,MAAMC,WAAW,GAAGD,WAAW,CAACE,MAAM,CAAC,CAACC,IAAI,EAAEC,CAAC,EAAEC,CAAC,KAAKF,IAAI,GAAG,GAAGE,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAGD,CAAC,EAAE,EAAE,EAAE,CAAC;IAE/F,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,MAAMC,IAAI,GAAG;MACTC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,cAAc,EAAE;MACpB;IACJ,CAAC;IACD,MAAMC,GAAG,GAAG,GAAGhB,MAAM,CAACiB,GAAG,CAACC,OAAO,GAAGf,QAAQ,GAAGE,WAAW,EAAE;IAC5D,IAAIc,QAAQ,GAAI,MAAM,CAAC,MAAMC,KAAK,CAACJ,GAAG,EAAEH,IAAI,CAAC,EAAEQ,IAAI,CAAC,CAAE;IACtD,OAAOF,QAAQ;EACnB;EAEA,MAAMG,SAASA,CAACnB,QAAQ,EAAEoB,IAAI,EAAE;IAE5B,MAAMb,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,MAAMC,IAAI,GAAG;MACTC,MAAM,EAAE,KAAK;MACbS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC;MAC1BR,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,cAAc,EAAE;MACpB;IACJ,CAAC;IACD,MAAMC,GAAG,GAAG,GAAGhB,MAAM,CAACiB,GAAG,CAACC,OAAO,GAAGf,QAAQ,EAAE;IAC9C,IAAIgB,QAAQ,GAAI,MAAM,CAAC,MAAMC,KAAK,CAACJ,GAAG,EAAEH,IAAI,CAAC,EAAEQ,IAAI,CAAC,CAAE;IACtD,OAAOF,QAAQ;EACnB;EAEA,MAAMO,UAAUA,CAACvB,QAAQ,EAAEoB,IAAI,EAAE;IAE7B,MAAMb,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,MAAMC,IAAI,GAAG;MACTC,MAAM,EAAE,MAAM;MACdS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC;MAC1BR,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IACD,MAAMC,GAAG,GAAG,GAAGhB,MAAM,CAACiB,GAAG,CAACC,OAAO,GAAGf,QAAQ,EAAE;IAC9C,IAAIgB,QAAQ,GAAI,MAAM,CAAC,MAAMC,KAAK,CAACJ,GAAG,EAAEH,IAAI,CAAC,EAAEQ,IAAI,CAAC,CAAE;IACtD,OAAOF,QAAQ;EACnB;EAEA,MAAMQ,YAAYA,CAACxB,QAAQ,EAAE;IAEzB,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,MAAMC,IAAI,GAAG;MACTC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,cAAc,EAAE;MACpB;IACJ,CAAC;IACD,MAAMC,GAAG,GAAG,GAAGhB,MAAM,CAACiB,GAAG,CAACC,OAAO,GAAGf,QAAQ,EAAE;IAC9C,IAAIgB,QAAQ,GAAI,MAAM,CAAC,MAAMC,KAAK,CAACJ,GAAG,EAAEH,IAAI,CAAC,EAAEQ,IAAI,CAAC,CAAE;IACtD,OAAOF,QAAQ;EACnB;AACJ;AAEA,eAAe,IAAIlB,SAAS,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}